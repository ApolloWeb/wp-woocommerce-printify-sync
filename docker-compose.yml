version: '3.8'

services:
  wordpress:
    container_name: wordpress
    image: bitnami/wordpress:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "80:80"
    volumes:
      - wordpress_data:/bitnami/wordpress
      - ./apache/wordpress-vhost.conf:/opt/bitnami/apache/conf/vhosts/wordpress-vhost.conf
    environment:
      WORDPRESS_DATABASE_HOST: db
      WORDPRESS_DATABASE_NAME: ${DB_NAME}
      WORDPRESS_DATABASE_USER: ${DB_USER}
      WORDPRESS_DATABASE_PASSWORD: ${DB_PASSWORD}
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    depends_on:
      - db
      - redis
    networks:
      - wp-network

  db:
    container_name: db
    image: bitnami/mariadb:latest
    environment:
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: rootpass
    volumes:
      - db_data:/bitnami/mariadb
    networks:
      - wp-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    ports:
      - "9090:90"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: rootpass
    networks:
      - wp-network

  ngrok:
    container_name: ngrok
    image: wernight/ngrok
    ports:
      - '4040:4040'
    volumes:
      - ./ngrok/ngrok.yml:/ngrok.yml
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: ngrok http --domain=${NGROK_DOMAIN} wordpress:80
    depends_on: 
      - wordpress
    networks:
      - wp-network

  redis:
    container_name: redis
    image: bitnami/redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/bitnami/redis
    networks:
      - wp-network

volumes:
  db_data:
  redis_data:
  wordpress_data:

networks:
  wp-network:
    driver: bridge