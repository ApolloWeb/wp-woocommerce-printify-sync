name: Strict Code Quality Enforcement

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Detect `act` and Install PHP if Necessary
        id: check-act
        run: |
          if [ -n "$ACT" ]; then
            echo "Running inside act. Installing PHP manually..."
            apt-get update
            apt-get install -y php-cli php-mbstring php-xml unzip curl git
            curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          else
            echo "Running on GitHub Actions."
          fi
        shell: bash

      - name: Setup PHP (GitHub Actions)
        if: ${{ env.ACT == '' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer, phpcs, phpstan, rector

      - name: Install PHP Dependencies
        run: |
          if [ -f "composer.json" ]; then
            composer install --no-interaction --prefer-dist
            composer dump-autoload
          else
            echo "No composer.json found, skipping Composer installation."
          fi

      - name: Run PHP CodeSniffer (Fix Mode)
        run: |
          if [ -f "vendor/bin/phpcs" ]; then
            vendor/bin/phpcbf --standard=WordPress .
          else
            echo "PHP CodeSniffer not found, skipping."
          fi

      - name: Run PHP CodeSniffer
        run: |
          if [ -f "vendor/bin/phpcs" ]; then
            vendor/bin/phpcs --standard=PSR12 .
          else
            echo "PHP CodeSniffer not found, skipping."
          fi

      - name: Run PHP Beautifier
        run: |
          if command -v php_beautifier &> /dev/null; then
            php_beautifier -r -s4 -f .
          else
            echo "PHP Beautifier not found, skipping."
          fi

      - name: Run PHP Lint
        run: |
          if command -v parallel-lint &> /dev/null; then
            parallel-lint .
          else
            echo "Parallel-lint not found, using PHP lint."
            find . -type f -name "*.php" -exec php -l {} \;
          fi
          

      - name: Run PHPStan
        run: |
          if [ -f "vendor/bin/phpstan" ]; then
            vendor/bin/phpstan analyse --level=max .
          else
            echo "PHPStan not found, skipping."
          fi

      - name: Run PHP Rector
        run: |
          if [ -f "vendor/bin/rector" ]; then
            vendor/bin/rector process --dry-run
          else
            echo "PHP Rector not found, skipping."
          fi

      - name: Run PHP Unit Tests (PHPUnit)
        run: |
          if [ -f "vendor/bin/phpunit" ]; then
            vendor/bin/phpunit --testdox
          else
            echo "PHPUnit not found, skipping tests."
          fi

      - name: Setup Node.js for JS & CSS Checks
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check for package.json
        run: |
          if [ ! -f "package.json" ]; then
            echo "package.json not found. Creating a default one."
            echo '{
              "name": "default-project",
              "version": "1.0.0",
              "scripts": {
                "test": "echo \"No tests specified\" && exit 0"
              }
            }' > package.json
          else
            echo "package.json already exists. Skipping creation."
          fi

      - name: Install JS, CSS & SASS Dependencies
        run: |
          npm install --global eslint stylelint stylelint-config-recommended prettier jest eslint-plugin-jquery sass-lint
          npm uninstall inflight || true
          npm install --global lru-cache
          npm install --global glob@latest

      - name: Run SASS Lint (Fix Mode)
        run: |
          if command -v stylelint &> /dev/null; then
            stylelint '**/*.scss' --fix
          else
            echo "Stylelint not found, skipping SASS fixes."
          fi
          

      - name: Run JavaScript Unit Tests
        run: |
          npm install
          npm test

      - name: Initialize CodeQL (Updated to v3)
        if: ${{ env.ACT == '' }}
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, php
          token: ${{ secrets.GITHUB_TOKEN || env.GITHUB_TOKEN }}

      - name: Perform CodeQL Analysis (Updated to v3)
        if: ${{ env.ACT == '' }}
        uses: github/codeql-action/analyze@v3

      - name: Install Git (if missing)
        run: |
          if ! command -v git &> /dev/null; then
            echo "Installing Git..."
            apt-get update && apt-get install -y git
          else
            echo "Git is already installed."
          fi

      - name: Commit & Push Fixes & Create PR
        if: ${{ env.ACT == '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || env.GITHUB_TOKEN }}
        run: |
          if [ ! -d ".git" ]; then
            echo "Not a Git repository, skipping commit and push."
            exit 0
          fi
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout master || git checkout -b master
          git remote set-url origin https://${GITHUB_TOKEN}@github.com/ApolloWeb/wp-woocommerce-printify-sync.git
          git fetch origin master
          git reset --hard origin/master
          git checkout -b "auto-fix/code-quality-${{ github.run_id }}"
          git add .
          
          if git diff --cached --exit-code; then
            echo "No automatic fixes were applied. Creating a GitHub issue."
            echo "Listing files needing manual fixes:" > manual-fixes.log
            git diff --name-only --cached >> manual-fixes.log
            cat manual-fixes.log
            gh issue create --title "Manual Code Fixes Required" \
          --body "$(echo -e "Code quality checks found issues that could not be fixed automatically.

        Affected files:

          $(cat manual-fixes.log)")" \
          --label "code-quality, manual-fix-needed"
          exit 1
          fi
      
git commit -m "Automated Code Fixes (PHP, JS, CSS, SCSS)"
git push -u origin "auto-fix/code-quality-${{ github.run_id }}"
