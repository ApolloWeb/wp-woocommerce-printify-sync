name: WordPress Test Environment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  test:
    name: WordPress Test Environment
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wptests
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, mysql, zip
          tools: composer:v2, wp-cli
          coverage: none

      - name: Verify WP-CLI installation
        run: wp --info

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Set up WordPress
        run: |
          # Create a directory for WordPress
          mkdir -p wordpress
          cd wordpress
          
          # Download WordPress
          wp core download --version=6.3
          
          # Create wp-config.php file
          wp config create --dbname=wptests --dbuser=root --dbpass=root --dbhost=127.0.0.1
          
          # Install WordPress
          wp core install --url=localhost --title=Test --admin_user=admin --admin_password=password --admin_email=admin@example.com
          
          # Go back to project root
          cd ..
        env:
          COMPOSER_PROCESS_TIMEOUT: 0
          COMPOSER_NO_INTERACTION: 1
          COMPOSER_NO_AUDIT: 1

      - name: Run Code Quality Checks
        run: composer run check

      # Install plugin into WordPress (when you're ready for integration tests)
      # - name: Install plugin
      #   run: |
      #     cd wordpress
      #     mkdir -p wp-content/plugins/wp-woocommerce-printify-sync
      #     cp -r ../src/* wp-content/plugins/wp-woocommerce-printify-sync/
      #     wp plugin activate wp-woocommerce-printify-sync
      #
      # - name: Run integration tests
      #   run: |
      #     # Your test commands here
      #     echo "Running integration tests..."