name: PHP Code Check

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  php-code-check:
    name: PHP ${{ matrix.php }} / WP ${{ matrix.wordpress }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php: ['7.4', '8.0', '8.1', '8.2']
        wordpress: ['latest', '6.2', '6.3', '6.4']
        exclude:
          # WordPress 6.2 doesn't fully support PHP 8.2
          - php: '8.2'
            wordpress: '6.2'

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none
          tools: composer:v2, phpunit

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install WordPress test suite
        run: |
          bash bin/install-wp-tests.sh wordpress_test \
            root root \
            127.0.0.1:${{ job.services.mysql.ports['3306'] }} \
            ${{ matrix.wordpress }} \
            true

      - name: Run PHP CodeSniffer
        run: vendor/bin/phpcs

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit
        env:
          WP_TESTS_DIR: /tmp/wordpress-tests-lib