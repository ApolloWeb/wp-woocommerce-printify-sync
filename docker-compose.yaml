services:
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: wordpress_printify
    restart: unless-stopped
    volumes:
      - ./wp-content/plugins/wp-woocommerce-printify-sync:/var/www/html/wp-content/plugins/wp-woocommerce-printify-sync
      - ./vendor:/var/www/html/vendor
      - ./:/var/www/html
      - php_logs:/var/log/php
      - ./xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - WORDPRESS_TABLE_PREFIX=${WORDPRESS_TABLE_PREFIX}
      - WP_DEBUG=${WP_DEBUG}
      - WP_DEBUG_LOG=${WP_DEBUG_LOG}
      - WP_DEBUG_DISPLAY=${WP_DEBUG_DISPLAY}
      - WP_ENVIRONMENT_TYPE=${WP_ENVIRONMENT_TYPE}
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT}
      - PHP_MAX_EXECUTION_TIME=${PHP_MAX_EXECUTION_TIME}
      - PHP_UPLOAD_MAX_FILESIZE=${PHP_UPLOAD_MAX_FILESIZE}
      - PHP_POST_MAX_SIZE=${PHP_POST_MAX_SIZE}
      - XDEBUG_MODE=${XDEBUG_MODE}
      - XDEBUG_CONFIG=${XDEBUG_CONFIG}
      - WP_HOME=${WP_HOME}
      - WP_SITEURL=${WP_SITEURL}
      - WORDPRESS_DEBUG=${WORDPRESS_DEBUG}
      - WP_AUTH_KEY=${WP_AUTH_KEY}
      - WP_SECURE_AUTH_KEY=${WP_SECURE_AUTH_KEY}
      - WP_LOGGED_IN_KEY=${WP_LOGGED_IN_KEY}
      - WP_NONCE_KEY=${WP_NONCE_KEY}
      - WP_AUTH_SALT=${WP_AUTH_SALT}
      - WP_SECURE_AUTH_SALT=${WP_SECURE_AUTH_SALT}
      - WP_LOGGED_IN_SALT=${WP_LOGGED_IN_SALT}
      - WP_NONCE_SALT=${WP_NONCE_SALT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - wordpress_net
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    container_name: nginx_printify
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "9003:9003"
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/var/www/html
      - ./logs/nginx:/var/log/nginx
      - ./nginx-cache:/tmp/nginx-cache
      - ./certs:/etc/nginx/certs:ro
    environment:
      - NGINX_HOST=${WP_HOME}
      - NGINX_PORT=80
    networks:
      - wordpress_net
    depends_on:
      - wordpress

  db:
    image: mysql:8.0
    container_name: mysql_printify
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
      - ./initdb.d:/docker-entrypoint-initdb.d
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --max_allowed_packet=128M
      - --innodb_buffer_pool_size=1G
    networks:
      wordpress_net:
        aliases:
          - db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_printify
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - UPLOAD_LIMIT=300M
    networks:
      - wordpress_net
    depends_on:
      - db

  # Optional: Redis for object caching
  redis:
    image: redis:alpine
    container_name: redis_printify
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - wordpress_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: Mailhog for email testing
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog_printify
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - wordpress_net

volumes:
  wordpress_data:
    name: wordpress_printify_data
  db_data:
    name: mysql_printify_data
  php_logs:
    name: php_printify_logs
  redis_data:
    name: redis_printify_data

networks:
  wordpress_net:
    name: wordpress_printify_network
    driver: bridge

# Configuration timestamp: 2025-02-23 22:03:58 UTC
# Updated by: ApolloWeb