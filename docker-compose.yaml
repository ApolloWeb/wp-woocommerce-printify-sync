services:
  app:
    image: robowen1972/wp_app
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wordpress_app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      WORDPRESS_DEBUG: ${WP_DEBUG}
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      - wordpress_network
    depends_on:
      db:
        condition: service_healthy

  web:
    image: nginx:alpine
    container_name: wordpress_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - redis
    networks:
      - wordpress_network

  db:
    image: mysql:5.7
    container_name: wordpress_db
    restart: unless-stopped
    env_file:
      - .env  # âœ… Loads database credentials
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - wordpress_network
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
    networks:
      - wordpress_network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    networks:
      - wordpress_network
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]

networks:
  wordpress_network:

volumes:
  dbdata:
