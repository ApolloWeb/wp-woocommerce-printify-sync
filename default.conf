# Add FastCGI cache configuration at the top
fastcgi_cache_path /tmp/nginx-cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_cache_valid 200 60m;

server {
    listen 80;
    server_name localhost;

    root /var/www/html;
    index index.php index.html;

    # Add FastCGI cache lock to prevent cache stampede
    fastcgi_cache_lock on;
    fastcgi_cache_lock_timeout 10s;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot|mp4|mp3|pdf)$ {
        expires max;
        log_not_found off;
        access_log off;
        add_header Cache-Control "public, no-transform";
    }

    location ~ /\. {
        deny all;
    }

    location = /wp-config.php {
        deny all;
    }

    location /wp-content/uploads/ {
        location ~* \.(php)$ {
            deny all;
        }
    }

    # Improved PHP handling
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Cache configuration
        fastcgi_cache WORDPRESS;
        fastcgi_cache_bypass $http_cookie;
        fastcgi_no_cache $http_cookie;
        fastcgi_cache_valid 200 301 302 60m;
        
        # Add cache status header
        add_header X-FastCGI-Cache $upstream_cache_status;
    }

    # Add health check location
    location /health-check {
        access_log off;
        return 200 'OK';
    }
}