[global]
; Redirect error logs to Docker logs
error_log = /dev/stderr

; Set the process ID file
pid = /run/php-fpm.pid

; Do not run as a daemon (needed for Docker)
daemonize = no

; Limit how many child processes can be spawned at once
process.max = 128

; Emergency restart settings
emergency_restart_threshold = 10
emergency_restart_interval = 1m
process_control_timeout = 10s

; Pool settings
[www]
; Run PHP-FPM under the correct user/group
user = www-data
group = www-data

; Listen on a TCP socket instead of a Unix socket (for Nginx communication)
listen = 9000
listen.owner = www-data
listen.group = www-data
listen.mode = 0660

; Dynamic process management (better for scaling)
pm = dynamic
pm.max_children = 50
pm.start_servers = 10
pm.min_spare_servers = 5
pm.max_spare_servers = 20
pm.process_idle_timeout = 10s
pm.max_requests = 500

; Logging settings
access.log = /dev/stdout
slowlog = /dev/stderr
request_slowlog_timeout = 5s
catch_workers_output = yes
decorate_workers_output = no

; Security settings
clear_env = no
env[HOSTNAME] = $HOSTNAME
env[PATH] = /usr/local/bin:/usr/bin:/bin
env[TMP] = /tmp
env[TMPDIR] = /tmp
env[TEMP] = /tmp

; PHP settings
php_admin_value[error_log] = /dev/stderr
php_admin_flag[log_errors] = on
php_admin_value[memory_limit] = 512M

; OPcache settings
php_admin_value[opcache.memory_consumption] = 256
php_admin_value[opcache.interned_strings_buffer] = 16
php_admin_value[opcache.max_accelerated_files] = 10000
php_admin_value[opcache.validate_timestamps] = 0

; Upload settings (match Nginx)
php_admin_value[post_max_size] = 100M
php_admin_value[upload_max_filesize] = 100M