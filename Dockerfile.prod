# Use an official PHP runtime as a parent image
FROM php:8.2-fpm

# Install required packages including MariaDB, Nginx, and Supervisor
RUN apt-get update && apt-get install -y \
    mariadb-server \
    mariadb-client \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libxml2-dev \
    libzip-dev \
    libonig-dev \
    nginx \
    supervisor \
    unzip \
    && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install -j$(nproc) \
    pdo_mysql \
    mysqli \
    zip \
    exif \
    opcache \
    intl \
    gd \
    && pecl install redis \
    && docker-php-ext-enable redis \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy the project files
COPY . /var/www/html

# Set working directory
WORKDIR /var/www/html

# Set permissions before running Composer
RUN chown -R www-data:www-data /var/www/html && \
    chmod -R 775 /var/www/html && \
    find /var/www/html -type d -exec chmod g+s {} \;

# Install PHP dependencies
ENV COMPOSER_ALLOW_SUPERUSER=1
RUN composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

# Set permissions again after running Composer
RUN chown -R www-data:www-data /var/www/html && \
    chmod -R 775 /var/www/html && \
    find /var/www/html -type d -exec chmod g+s {} \; && \
    mkdir -p /var/log/nginx && \
    chown -R www-data:www-data /var/log/nginx && \
    mkdir -p /var/run && \
    chown -R www-data:www-data /var/run

# Ensure MySQL runs and create the WordPress database
RUN service mysql start && \
    mysql -e "CREATE DATABASE IF NOT EXISTS wordpress;" && \
    mysql -e "CREATE USER IF NOT EXISTS 'wordpress'@'%' IDENTIFIED BY 'yourpassword';" && \
    mysql -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'%';" && \
    mysql -e "FLUSH PRIVILEGES;"

# Expose only port 80 (not 3306 since MariaDB is internal)
EXPOSE 80

# Create Supervisor configuration to start Nginx, PHP-FPM, and MariaDB
RUN echo "[supervisord]" > /etc/supervisor/conf.d/supervisord.conf && \
    echo "nodaemon=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:nginx]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/sbin/nginx -g 'daemon off;'" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:php-fpm]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/local/sbin/php-fpm -F" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:mysql]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/bin/mysqld_safe" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf

# Start supervisord to manage Nginx, PHP-FPM, and MariaDB
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]