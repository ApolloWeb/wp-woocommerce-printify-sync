# Use official PHP image as base
FROM php:8.2-fpm AS base

# Install required system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    nginx \
    supervisor \
    unzip \
    mariadb-server \
    mariadb-client \
    curl \
    git \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libxml2-dev \
    libzip-dev \
    libonig-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install -j$(nproc) \
    pdo_mysql \
    mysqli \
    zip \
    exif \
    opcache \
    intl \
    gd \
    && pecl install redis \
    && docker-php-ext-enable redis \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Composer globally
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Set working directory
WORKDIR /var/www/html

# Copy composer.json and composer.lock before running install (to leverage caching)
COPY composer.json composer.lock ./

# Run Composer install as root (Superuser) and allow `www-data` to use installed files
RUN COMPOSER_ALLOW_SUPERUSER=1 composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader && \
    chown -R www-data:www-data /var/www/html/vendor && \
    chown -R www-data:www-data /var/www/html/wp

# Copy application files
COPY . .

# Ensure correct file structure for WordPress and wp-content
RUN mkdir -p /var/www/html/wp && \
    mkdir -p /var/www/html/wp-content && \
    chown -R www-data:www-data /var/www/html && \
    chmod -R 775 /var/www/html && \
    find /var/www/html -type d -exec chmod g+s {} \;

# Copy configuration files
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY nginx/conf.d /etc/nginx/conf.d
COPY php/php.ini /usr/local/etc/php/php.ini
COPY php/php-fpm.conf /usr/local/etc/php-fpm.conf
COPY etc/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Expose Nginx port
EXPOSE 80

# Start Nginx and PHP-FPM with Supervisor
CMD ["sh", "-c", "until mysqladmin ping -h mariadb.internal --silent; do sleep 5; done && /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf"]